<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://vparticles.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://vparticles.com/" rel="alternate" type="text/html" /><updated>2018-05-07T21:46:31+03:00</updated><id>http://vparticles.com/</id><title type="html">VParticles</title><subtitle>Coding, Design and more</subtitle><author><name>Nick Garlis</name><email>nick@vparticles.com</email></author><entry><title type="html">Swap nodes in a Doubly Linked List</title><link href="http://vparticles.com/data%20stuctures/doubly-linked-lists/" rel="alternate" type="text/html" title="Swap nodes in a Doubly Linked List" /><published>2017-12-30T00:00:00+02:00</published><updated>2017-12-30T00:00:00+02:00</updated><id>http://vparticles.com/data%20stuctures/doubly-linked-lists</id><content type="html" xml:base="http://vparticles.com/data%20stuctures/doubly-linked-lists/">&lt;p&gt;When I first learned about Doubly Linked Lists what I found really tricky about them was how to sort them and more specifically how to swap two nodes. So I decided to make a post about it.&lt;/p&gt;

&lt;p&gt;Let’s assume that our list consists of only 4 nodes. Those are enough for us to cover every possible scenario during swapping.&lt;/p&gt;

&lt;p&gt;Our swap function is going to take two parameters, our left and right nodes.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;void swap(struct list* left, struct list* right)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Before we start messing with &lt;strong&gt;left&lt;/strong&gt; and &lt;strong&gt;right’s&lt;/strong&gt; pointers we have to make sure that the Nodes pointing to them are updated.&lt;/p&gt;

&lt;p&gt;First we make sure that there is a Node that has &lt;strong&gt;left&lt;/strong&gt; as next &lt;code class=&quot;highlighter-rouge&quot;&gt;if ( left-&amp;gt;previous )&lt;/code&gt; then we make that Node to have &lt;strong&gt;right&lt;/strong&gt; as next &lt;code class=&quot;highlighter-rouge&quot;&gt;left-&amp;gt;previous-&amp;gt;next = right;&lt;/code&gt;. If however, there are no nodes before &lt;strong&gt;left&lt;/strong&gt; that means that it is the &lt;strong&gt;head&lt;/strong&gt;. In that case, we now have to set our &lt;strong&gt;head&lt;/strong&gt; equal to &lt;strong&gt;right&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;head = right;&lt;/code&gt; since &lt;strong&gt;left&lt;/strong&gt; is going to no longer be the &lt;strong&gt;head&lt;/strong&gt; after the swap.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We follow a similar procedure for the Node after &lt;strong&gt;right&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now it’s just &lt;strong&gt;left&lt;/strong&gt; and &lt;strong&gt;right&lt;/strong&gt;. We now simply need to swap &lt;strong&gt;left&lt;/strong&gt; and &lt;strong&gt;right’s&lt;/strong&gt; pointers.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice how I assigned &lt;strong&gt;left&lt;/strong&gt; to be &lt;strong&gt;right’s&lt;/strong&gt; next Node and &lt;strong&gt;right&lt;/strong&gt; to be &lt;strong&gt;left’s&lt;/strong&gt; previous Node.&lt;/p&gt;</content><author><name>Nick Garlis</name><email>nick@vparticles.com</email></author><category term="C" /><category term="Nodes" /><summary type="html">When I first learned about Doubly Linked Lists what I found really tricky about them was how to sort them and more specifically how to swap two nodes. So I decided to make a post about it.</summary></entry></feed>